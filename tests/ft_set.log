TEST SET

Content of second: 0 10 20 30 40
Content of third:  0 10 20 30 40
Content of fourth:  0 10 20 30 40

TESTING CAPACITY

Test empty
Is first empty? true
Is second empty? false
Is third empty? false
Is fourth empty? false

Test size
Size of first: 0
Size of second: 5
Size of third: 5
Size of fourth: 5

Test max size
max_size of first: 230584300921369395
max_size of second: 230584300921369395
max_size of third: 230584300921369395
max_size of fourth: 230584300921369395

Test Insert
Inserting 11, 21, 31 and 41 in first (pair<iterator, bool> insert(const value_type& val))
Content of first after insert: 11 21 31 41
Inserting 15, 25, 35 in first (template <class InputInterator> void insert(InputIterator first, InputIterator last))
Content of first after insert: 11 15 21 25 31 35 41

Testing Erase
Erasing third element (void erase (iterator position))
Content of first after erase: 11 15 25 31 35 41

Erasing 31 from first, returning the number of nodes deleted (size_type erase(const value_type& val))
Node(s) erased: 1
Content of first after erase: 11 15 25 31 41

Erasing a range (void erase(iterator first, iterator last))
Content of first after erase: 11 15

Testing swap
Swapping first and second
Content of second: 11 15
Content of first: 0 10 20 30 40

Testing clear
second size is empty after clear? true

Testing find
The iterator assigned after first.find(30) points to 30
it_test should point to first.end() after first.find(78) (value doesn't exist): true

Testing count
Number of time value 20 is in first: 1
Number of time value 45 is in first: 0

Testing lower bound and upper bound
first.lower_bound(20) points to 20
first.upper_bound(30) points to 40
first.upper_bound(40) should point to first.end(): true

Testing equal range
Lower bound points to: 20
Upper bound points to: 30

TEST RELATIONAL OPERATORS
first different than second? true
third equal to fourth? true
first superior to second? true
first inferior to second? false
first superior or equal to second? true
first inferior or equal to second? false

Testing with different value_type
Content of set_string: This a is test
